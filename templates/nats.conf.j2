# Client port of 4222 on all interfaces
port: 4222

# HTTP monitoring port
monitor_port: 8222


# This is for clustering multiple servers together.
cluster {

  # Route connections to be received on any interface on port 6222
  port: 6222

  # Routes are protected, so need to use them with --routes flag
  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
  authorization {
    user: ruser
    password: T0pS3cr3t
    timeout: 0.75
  }

  # Routes are actively solicited and connected to from this server.
  # This Docker image has none by default, but you can pass a
  # flag to the gnatsd docker image to create one to an existing server.
  routes = [
{% for host in groups[nats_ansible_host_group] %}
    nats-route://ruser:T0pS3cr3t@{{ hostvars[host].ansible_default_ipv4.address }}:6222
{% endfor %}
  ]
}

{% if nats_gateway %}
gateway {
  gateways: [
    {% for gateway in nats_gateway_entries %}
    {name: "{{ gateway.name }}", url: "{{ gateway.url }}" },
    {% endfor %}
  ]
}
{% endif %}

# logging options
debug:   true
trace:   false
logtime: false
log_file: "/var/log/nats.log"

# pid file
pid_file: "/run/nats/nats.pid"